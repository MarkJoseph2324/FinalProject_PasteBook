@using BusinessLogicLibrary;

@model IEnumerable<Entities.POST>

@foreach (var item in Model)
{
    <div>
        <div class="col-md-4"></div>
        <div class="col-md-8">
            <div class="panel panel-info">
                <div class="panel-heading">
                    @{
                        BusinessLogic businessLogic = new BusinessLogic();

                        int posterID = 0;
                        string poster = string.Empty;
                        string profileOwner = string.Empty;
                        if (item.POSTER_ID == (int)Session["ID"])
                        {
                            poster = item.USER.FIRST_NAME + " " + item.USER.LAST_NAME;
                            posterID = item.USER.ID;
                            profileOwner = item.USER1.FIRST_NAME + " " + item.USER1.LAST_NAME;
                        }
                        else if (item.POSTER_ID != (int)Session["ID"])
                        {
                            poster = item.USER1.FIRST_NAME + " " + item.USER1.LAST_NAME;
                            posterID = item.USER1.ID;
                            profileOwner = item.USER.FIRST_NAME + " " + item.USER.LAST_NAME;
                        }

                        if (item.POSTER_ID == item.PROFILE_OWNER_ID)
                        {
                            @Html.Label("FullName", poster);
                            <span class="glyphicon glyphicon-one-fine-full-dot "></span>
                            <span>@businessLogic.TimeStamp(@item.CREATED_DATE)</span>
                        }
                        else if (item.POSTER_ID != item.PROFILE_OWNER_ID)
                        {
                            @Html.Label("FullName", poster);
                            <span aria-hidden="true" class="glyphicon glyphicon-play" id="glyphiconArrowHead"></span>
                            @Html.Label("FullName", profileOwner);
                            <span class="glyphicon glyphicon-one-fine-full-dot "></span>
                            <span>@businessLogic.TimeStamp(@item.CREATED_DATE)</span>
                        }
                    }
                </div>
                <div class="panel-body">
                    @{
                        if (Model != null)
                        {
                            if (item.USER.ID == posterID)
                            {
                                if (item.USER.PROFILE_PIC == null)
                                {
                                    <img src="~/Content/images/default.png" class="profilePicture" id="postPicture" />
                                }
                                else
                                {

                                    var base64 = Convert.ToBase64String(item.USER.PROFILE_PIC);
                                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                    <img src="@imgSrc" id="postPicture" class="profilePicture" />
                                }
                            }
                            else
                            {
                                if (item.USER1.PROFILE_PIC == null)
                                {
                                    <img src="~/Content/images/default.png" class="profilePicture" id="postPicture" />
                                }
                                else
                                {

                                    var base64 = Convert.ToBase64String(item.USER1.PROFILE_PIC);
                                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                    <img src="@imgSrc" id="postPicture" class="profilePicture" />
                                }
                            }
                        }
                    }
                    @Html.DisplayFor(modelItem => item.CONTENT)

                    @{
                        int likes = item.LIKEs.Where(x => x.POST_ID == item.ID).Count();
                        List<string> list = new List<string>();
                        <div>
                            @if (likes > 0)
                            {
                                if (likes != 0)
                                {
                                    @*<button type="button" id="btnUnlike" class="btn btn-default" onclick="DeleteLike(@item.ID)">
                                        Unlike
                                    </button>*@
                                    <span>Liked</span>
                                }

                            }
                            else
                            {
                                if (likes == 0)
                                {
                                    <button type="button" id="btnLike" class="btn btn-default" onclick="AddLike(@item.ID); Notification('Like',@item.ID,0,0)">
                                        Like
                                    </button>
                                }
                            }
                            @if (likes != 0)
                            {
                                @likes <span id="likeCounts" class="glyphicon glyphicon-thumbs-up"></span>
                            }
                            @if (item.COMMENTs.Count() != 0)
                            {
                                <hr />
                                foreach (var itemComment in item.COMMENTs)
                                {
                                    <div class="commentContainer">
                                        <div class="bg-info">
                                            @Html.Label("FullName", itemComment.USER.FIRST_NAME + " " + itemComment.USER.LAST_NAME)
                                        </div>
                                        <div class="bg-info">
                                            <span>@itemComment.CONTENT</span>
                                        </div>
                                        <div class="bg-info">
                                            <span>@itemComment.CREATED_DATE</span>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
                <div class="panel-footer">
                    <div class="col-md-10">
                        <input type="text" name="comment" id="txtComment@(item.ID)" class="form-control textComment" placeholder="Write a comment..." />
                    </div>
                    <button type="button" id="btnComment" class="btn btn-default" onclick="AddComment(@item.ID, this)" value="@item.ID">Comment</button>
                </div>
            </div>
        </div>
    </div>
                        }
