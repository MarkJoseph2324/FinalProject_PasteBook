@using BusinessLogicLibrary;
@model Entities.USER

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Time Line";
}
@*logout modal*@
<div class="modal fade" id="logout">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p>Are you sure you want to logout?</p>
            </div>
            <div class="modal-footer">
                <button id="btnOk" type="button" class="btn btn-secondary" data-dismiss="modal" onclick="location.href = '@Url.Action("LogIn", "PasteBookAccount")'">OK</button>
                <button id="btnCancel" type="button" class="btn btn-warning" data-dismiss="modal">CANCEL</button>
            </div>
        </div>
    </div>
</div>
@*Edit About Me Modal*@
<div class="modal fade" id="aboutMe">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                @Html.TextArea("txtAboutMeEdit", null, new { @rows = 8, @placeholder = "Tell something about yourself...", id = "txtAboutMeEdit" })
                @Html.ValidationMessage("txtAboutMeEdit", "", new { @class = "text-danger", id = "txtEmailEditValidate" })
            </div>
            <div class="modal-footer">
                <button id="btnOkAboutMe" type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
                <button id="btnCancelAboutMe" type="button" class="btn btn-warning" data-dismiss="modal">CANCEL</button>

            </div>
        </div>
    </div>
</div>

<div class="containerPastebook">
    <div class="col-md-4 pull-left">
        @*Profile Picture*@
        <div class="well well-lg">
            @{
                if (Model != null)
                {
                    if (Model.PROFILE_PIC == null)
                    {
                        <img src="~/Content/images/default.png" class="profilePicture" id="newsfeedPicture" />
                    }
                    else
                    {
                        var base64 = Convert.ToBase64String(Model.PROFILE_PIC);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <img src="@imgSrc" class="profilePicture" id="newsfeedPicture" />
                    }
                }
            }
        </div>
        @{
            var status = Model.FRIENDs.Where(x => x.USER_ID == (int)Session["ID"] && x.FRIEND_ID == Model.ID && x.REQUEST == "Y").FirstOrDefault();
            var status2 = Model.FRIENDs1.Where(x => x.USER_ID == Model.ID && x.FRIEND_ID == (int)Session["ID"] && x.REQUEST == "Y").FirstOrDefault();
            if (status != null && status2 != null)
            {
                <button type="button" id="friendRequest" class="form-control btn btn-primary" onclick="">Friends</button>
            }
            else if (status != null && status2 != null)
            {
                <button type="button" id="friendRequest" class="form-control btn btn-primary" onclick="">Pending Friend Request</button>
            }
            else if (status == null && status2 == null)
            {
                <button type="button" id="friendRequest" class="form-control btn btn-primary" onclick="AddFriendRequest(@((int)Session["ID"]), @Model.ID)">Add Friends</button>
            }
        }



        @if (Model != null)
        {
            if ((int)Session["ID"] == Model.ID)
            {
                using (Html.BeginForm("UploadImage", "PasteBook", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="well well-lg">
                        <label for="file">Upload Image:</label>
                        <input type="file" name="file" id="file" style="width: 100%;" />
                        <input type="submit" value="Upload" class="submit" />
                    </div>
                }
            }
        }
        @*User information Panel*@
        <div class="panel panel-primary">
            <div class="panel-heading">
                User Information
            </div>
            <div class="panel-body">
                @{
                    <div>
                        <span class="labelInfo">Name: </span>
                        <span>@Model.FIRST_NAME @Model.LAST_NAME</span>
                    </div>
                    <div>
                        <span class="labelInfo">Gender: </span>
                        @if (Model.GENDER == "F")
                        {
                            <span>Female</span>
                        }
                        else if (Model.GENDER == "M")
                        {
                            <span>Male</span>
                        }
                        else if (Model.GENDER == "U")
                        {
                            <span>Unspecified</span>
                        }
                    </div>
                    <div>
                        <span class="labelInfo">Birthday: </span>
                        <span>@Model.BIRTHDAY.ToString("MMMM dd, yyyy")</span>
                    </div>
                    <div>
                        <span class="labelInfo">Mobile Number: </span>
                        <span>@Model.MOBILE_NO</span>
                    </div>
                    <div>
                        <span class="labelInfo">Username: </span>
                        <span>@Model.USER_NAME</span>
                    </div>
                    <div>
                        <span class="labelInfo">Country: </span>
                        <span>@Model.REF_COUNTRY.COUNTRY</span>
                    </div>
                }
            </div>
        </div>
        @*About Me Panel*@
        <div class="panel panel-primary">
            <div class="panel-heading">
                About Me
            </div>
            <div class="panel-body">
                @if (Model != null)
                {
                    <span class="textContainer" , id="txtAboutMe"> @Model.ABOUT_ME</span>
                }
            </div>
            <div class="panel-footer">
                @if (Model.ID == (int)Session["ID"])
                {
                    <button type="button" id="btnAboutMe" class="btn btn-default">Edit</button>
                }
            </div>
        </div>

        @*<a href='@Url.Action("Friends", "Pastebook", new { username = Session["Username"].ToString() })'>View Friends</a>*@
    </div>
    @*Post div*@
    <div class="col-md-8">
        <div class="form-horizontal ">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <span class="glyphicon glyphicon-pencil"></span> Update Status
                </div>
                <div class="panel-body">
                    @Html.TextArea("txtPost", null, new { @rows = 5, @placeholder = "What's on your mind?", @class = "txtPost" })
                </div>
                <div class="panel-footer">
                    <div class="col-md-11"></div>
                    <button type="button" id="btnPostTimeLine" class="btn btn-primary" value="@Model.ID">Post</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="refreshPartialView">
    @{
        Html.RenderAction("GetAllPostPartial", "PasteBook");
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@{
    @Scripts.Render("~/bundles/jquery");
    <script>
        var getCreatePostUrl = '@Url.Action("CreatePost", "PasteBook")';
        var getRefreshPartialViewUrl = '@Url.Action("GetAllPostPartial", "PasteBook", new { username =Model.USER_NAME })';
        var getLikePostUrl = '@Url.Action("LikePost", "PasteBook")';
        var getCommentPostUrl = '@Url.Action("AddComment", "PasteBook" )';
        var getAddNotificationUrl = '@Url.Action("AddNotification", "PasteBook" )';
        var getGetNotificationCountUrl = '@Url.Action("GetNotificationCount", "PasteBook" )';
        var getGetNotificationListUrl = '@Url.Action("GetNotificationList", "PasteBook" )';
        var getAddFriendRequestUrl = '@Url.Action("AddFriendRequest", "PasteBook" )';
        var getUpdateStatusUrl = '@Url.Action("UpdateStatus", "PasteBook" )';
        var getEditProfileUrl = '@Url.Action("EditAboutMe", "PasteBook" )';
        var getAddFriendNotification = '@Url.Action("Notification", "PasteBook" )';
        var getAddFriendRequest = '@Url.Action("AddFriend", "PasteBook" )';

        $('#btnPostTimeLine').click(function () {
            var data = {
                post: $('#txtPost').val(),
                profileOwnerID: $('#btnPostTimeLine').val()
            }
            if ($('#txtPost').val() != null) {
                $.ajax({
                    url: getCreatePostUrl,
                    data: data,
                    type: 'GET',
                    success: function () {
                        Reload();
                    }
                })
            }
        });

        function AddFriend(user_ID, profileOwner_ID) {
            var data = {
                userID: user_ID,
                profileOwnerID: profileOwner_ID
            }
            $.ajax({
                url: getCommentPostUrl,
                data: data,
                type: 'GET',
                success: function (data) {
                    Notification('AddFriend', data.PostID, data.CommentID, data.ProfileOwnerID)
                    Reload();
                }
            })
        };

        function AddLike(ID) {
            var data = {
                postID: ID
            };

            $.ajax({
                url: getLikePostUrl,
                data: data,
                type: 'GET',
                success: function () {
                    Reload();
                }
            })
        };

        function AddComment(ID, button) {
            var data = {
                postID: ID,
                postContent: $('#txtComment'.concat(button.value)).val()
            };

            $.ajax({
                url: getCommentPostUrl,
                data: data,
                type: 'GET',
                success: function (data) {
                    Notification('Comment', data.PostID, data.CommentID, data.ProfileOwnerID)
                    Reload();
                }
            })
        };

        function Search() {
            location.href = url + '/?searchValue=' + $('#txtSearch').val()
        };

        function Reload() {
            $('#refreshPartialView').load(getRefreshPartialViewUrl);
            $('#txtPost').val("");
            $('#txtComment').val("");
        };

        function Notification(notificationType, post_ID, comment_ID, IDtoBeFriend) {
            var data = {
                notifType: notificationType,
                postID: post_ID,
                commentID: comment_ID,
                friendRequestID: IDtoBeFriend
            }

            $.ajax({
                url: getAddNotificationUrl,
                data: data,
                type: 'GET',
                success: function () {
                    Reload();
                    NotifyFriend();
                    GetLikeNotificationCount();
                }
            })
        };

        function NotifyFriend() {
            $.ajax({
                url: getGetNotificationListUrl,
                type: 'GET',
                success: function () {
                    Reload();
                }
            })
        };

        function GetNotificationCount() {
            $.ajax({
                url: getGetNotificationCountUrl,
                type: 'GET',
                success: function (data) {
                    RefreshBadge(data);
                }
            })
        };

        function UpdateStatus(status, visitedID) {
            data = {
                relStatus: status,
                visitedID: visited_ID
            }
            $.ajax({
                url: getAddLikeNotificationUrl,
                data: data,
                type: 'GET',
                success: function () {
                    Reload();
                    NotifyFriend();
                    GetLikeNotificationCount();
                }
            })
        };

        function RefreshBadge(data) {
            if (data.NotifCount != 0) {
                $('#globeBadge').text(data.NotifCount)
            }
        }

        //////Logout

        $("#btnLogout").click(function () {
            $('#logout').modal('show');
            //$("#btnOk").click(function () {
            //    var url = $("#RedirectToLogin").val();
            //    location.href = url;
            //})

            //$("#btnCancel").click(function () {
            //    var url = $("#RedirectToIndex").val();
            //    location.href = url;
            //})
        })

        /////// about me
        $("#btnAboutMe").click(function () {
            $('#txtAboutMeEdit').val("")
            $('#aboutMe').modal('show');
            $("#btnOkAboutMe").click(function () {
                var data = {
                    value: $('#txtAboutMeEdit').val()
                }
                $.ajax({
                    url: getEditProfileUrl,
                    data: data,
                    type: 'GET',
                    success: function () {
                        $("#txtAboutMe").text($('#txtAboutMeEdit').val());
                    }
                })
            })
        });

        $("#txtAboutMeEdit").keyup(function () {
            if ($("#txtAboutMeEdit").val().length > 2000) {
                $("#txtEmailEditValidate").text("Description must not exceed 2000 characters. ")
                $("#btnOkAboutMe").attr('disabled', true);
                $("#btnOkAboutMe").css('cursor', 'not-allowed');
            }
            else {
                $("#txtEmailEditValidate").text("")
            }
        })


        window.onload = GetLikeNotificationCount


        //Preview profile picture
        //stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded
        $("#uploadImage").on('change', function () {
            if (typeof (FileReader) != "undefined") {
                var image_holder = $("#imageHolder");
                image_holder.empty();

                var reader = new FileReader();
                reader.onload = function (e) {
                    $("<img />", {
                        "src": e.target.result,
                        "class": "thumb-image"
                    }).appendTo(image_holder);
                }
                image_holder.show();
                reader.readAsDataURL($(this)[0].files[0]);
            } else {
                alert("This browser does not support FileReader.");
            }
        });


    </script>
    @*<script src="~/Scripts/PasteBook.js"></script>*@
}